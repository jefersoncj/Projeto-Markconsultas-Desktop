/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.markConsult.gui;

import br.com.markConsult.classesMetodos.ConsultTableModel;
import br.com.markConsult.classesMetodos.FormatacaoConteudo;
import br.com.markConsult.dao.CadConsultasDAO;
import br.com.markConsult.dao.ICadConsultasDAO;
import br.com.markConsult.dao.entidades.Consulta;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author jeferson
 */
public class AgendaConsultas extends javax.swing.JInternalFrame {
    
 
   
    private int selecionado = 0;
    private int selecionado2 = 0;
    
    private ConsultTableModel model;
    private ConsultTableModel model2;
    
    String data = (new java.text.SimpleDateFormat("dd/MM/yyyy").format(new java.util.Date(System.currentTimeMillis())));
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form CadConsultas
     * @throws java.text.ParseException
     */
    public AgendaConsultas() throws ParseException {
        initComponents();  
        
        addpopup();
       // addpopup2();
        Date dt = (Date) converte(data);
        tf_dataConsul.setDate(dt);
        
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        model = new ConsultTableModel();
        model2 = new ConsultTableModel();
        jTable1.setModel(model);
        jTable2.setModel(model2);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(48);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(65);
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(1000);
        
        jTable2.getColumnModel().getColumn(0).setMaxWidth(48);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTable2.getColumnModel().getColumn(8).setPreferredWidth(65);
        jTable2.getColumnModel().getColumn(9).setPreferredWidth(90);
        jTable2.getColumnModel().getColumn(10).setPreferredWidth(1000);
        buscaPorData(pegadataAtual(),1);
        //addPopup(jTable1);
        

        bt_altSeqConsul.setEnabled(false);

        tf_dataConsul.addPropertyChangeListener(new java.beans.PropertyChangeListener() {//GERA A AÇÃO PRA TROCA DE PROPRIEDADE  
            @Override
            
            public void propertyChange(java.beans.PropertyChangeEvent evt) { //GERA EVENTO  
                    try {
                        buscaPorData(pegadataAtual(),1);
                    } catch (ParseException ex) {
                        Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                    
                
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPMenu = new javax.swing.JPopupMenu();
        jM_altStatus = new javax.swing.JMenu();
        jMenuIt_Aberta = new javax.swing.JMenuItem();
        jMenuIt_Encerra = new javax.swing.JMenuItem();
        jMenuIt_Cancel = new javax.swing.JMenuItem();
        jMenuIt_Faltou = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuIt_historico = new javax.swing.JMenuItem();
        jMenuIt_retorno = new javax.swing.JMenuItem();
        jMenuIt_Procedimento = new javax.swing.JMenuItem();
        jMenuIt_Excluir = new javax.swing.JMenuItem();
        jMenuIt_addFila = new javax.swing.JMenuItem();
        jPMenu2 = new javax.swing.JPopupMenu();
        jM_altStatus1 = new javax.swing.JMenu();
        jMenuIt_Encerra1 = new javax.swing.JMenuItem();
        jMenuIt_Cancel1 = new javax.swing.JMenuItem();
        jMenuIt_EmConsul = new javax.swing.JMenuItem();
        jMenuIt_Aguardando = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuIt_historico1 = new javax.swing.JMenuItem();
        jMenuIt_retorno1 = new javax.swing.JMenuItem();
        jMenuIt_Procedimento1 = new javax.swing.JMenuItem();
        jMenuIt_Excluir1 = new javax.swing.JMenuItem();
        jMenuIt_RmFila = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        bt_movPcima = new javax.swing.JButton();
        bt_movPbaixo = new javax.swing.JButton();
        bt_altSeqConsul = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        bt_buscar = new javax.swing.JButton();
        bt_novo = new javax.swing.JButton();
        bt_excluir = new javax.swing.JButton();
        bt_editar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tf_dataConsul = new com.toedter.calendar.JDateChooser("dd/MM/yyyy" , "##/##/####" , ' ');
        bt_data_anterior = new javax.swing.JButton();
        bt_data_proxima = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        bt_buscar1 = new javax.swing.JButton();
        bt_novo1 = new javax.swing.JButton();
        bt_excluir1 = new javax.swing.JButton();
        bt_editar1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jM_altStatus.setText("Alterar status");

        jMenuIt_Aberta.setText("Aberta");
        jMenuIt_Aberta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_AbertaActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Aberta);

        jMenuIt_Encerra.setText("Encerrada");
        jMenuIt_Encerra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_EncerraActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Encerra);

        jMenuIt_Cancel.setText("Cancelada");
        jMenuIt_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_CancelActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Cancel);

        jMenuIt_Faltou.setText("Faltou");
        jMenuIt_Faltou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_FaltouActionPerformed(evt);
            }
        });
        jM_altStatus.add(jMenuIt_Faltou);

        jPMenu.add(jM_altStatus);
        jPMenu.add(jSeparator1);

        jMenuIt_historico.setText("Ver historico do Paciente");
        jMenuIt_historico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_historicoActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_historico);

        jMenuIt_retorno.setText("Marcar retorno");
        jMenuIt_retorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_retornoActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_retorno);

        jMenuIt_Procedimento.setText("Marcar Procedimento");
        jMenuIt_Procedimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_ProcedimentoActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_Procedimento);

        jMenuIt_Excluir.setForeground(new java.awt.Color(255, 0, 0));
        jMenuIt_Excluir.setText("Excluir");
        jMenuIt_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_ExcluirActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_Excluir);

        jMenuIt_addFila.setText("Adicionar na Fila");
        jMenuIt_addFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_addFilaActionPerformed(evt);
            }
        });
        jPMenu.add(jMenuIt_addFila);

        jM_altStatus1.setText("Alterar status");

        jMenuIt_Encerra1.setText("Encerrada");
        jMenuIt_Encerra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_Encerra1ActionPerformed(evt);
            }
        });
        jM_altStatus1.add(jMenuIt_Encerra1);

        jMenuIt_Cancel1.setText("Cancelada");
        jMenuIt_Cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_Cancel1ActionPerformed(evt);
            }
        });
        jM_altStatus1.add(jMenuIt_Cancel1);

        jMenuIt_EmConsul.setText("Em Consulta");
        jMenuIt_EmConsul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_EmConsulActionPerformed(evt);
            }
        });
        jM_altStatus1.add(jMenuIt_EmConsul);

        jMenuIt_Aguardando.setText("Aguardando");
        jMenuIt_Aguardando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_AguardandoActionPerformed(evt);
            }
        });
        jM_altStatus1.add(jMenuIt_Aguardando);

        jPMenu2.add(jM_altStatus1);
        jPMenu2.add(jSeparator2);

        jMenuIt_historico1.setText("Ver historico do Paciente");
        jMenuIt_historico1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_historico1ActionPerformed(evt);
            }
        });
        jPMenu2.add(jMenuIt_historico1);

        jMenuIt_retorno1.setText("Marcar retorno");
        jMenuIt_retorno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_retorno1ActionPerformed(evt);
            }
        });
        jPMenu2.add(jMenuIt_retorno1);

        jMenuIt_Procedimento1.setText("Marcar Procedimento");
        jMenuIt_Procedimento1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_Procedimento1ActionPerformed(evt);
            }
        });
        jPMenu2.add(jMenuIt_Procedimento1);

        jMenuIt_Excluir1.setForeground(new java.awt.Color(255, 0, 0));
        jMenuIt_Excluir1.setText("Excluir");
        jMenuIt_Excluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_Excluir1ActionPerformed(evt);
            }
        });
        jPMenu2.add(jMenuIt_Excluir1);

        jMenuIt_RmFila.setText("Remover da Fila");
        jMenuIt_RmFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIt_RmFilaActionPerformed(evt);
            }
        });
        jPMenu2.add(jMenuIt_RmFila);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consultas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/help.png"))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        bt_movPcima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-up-icon (1).png"))); // NOI18N
        bt_movPcima.setToolTipText("Move consulta para cima");
        bt_movPcima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_movPcimaActionPerformed(evt);
            }
        });

        bt_movPbaixo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-down-icon (1).png"))); // NOI18N
        bt_movPbaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_movPbaixoActionPerformed(evt);
            }
        });

        bt_altSeqConsul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/salvaIt2.png"))); // NOI18N
        bt_altSeqConsul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_altSeqConsulActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_movPcima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_movPbaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_altSeqConsul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(bt_movPcima)
                .addGap(0, 0, 0)
                .addComponent(bt_movPbaixo)
                .addGap(0, 0, 0)
                .addComponent(bt_altSeqConsul))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        bt_buscar.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        bt_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Search-icon (1).png"))); // NOI18N
        bt_buscar.setToolTipText("");
        bt_buscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });

        bt_novo.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        bt_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/new-file-icon (2).png"))); // NOI18N
        bt_novo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_novo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bt_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_novoActionPerformed(evt);
            }
        });

        bt_excluir.setFont(new java.awt.Font("Ubuntu", 0, 8)); // NOI18N
        bt_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/trash-icon (2).png"))); // NOI18N
        bt_excluir.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Excluir", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_excluir.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluirActionPerformed(evt);
            }
        });

        bt_editar.setFont(new java.awt.Font("Ubuntu", 0, 8)); // NOI18N
        bt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Action-edit-icon (2).png"))); // NOI18N
        bt_editar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_editar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Log-Out-icon (1).png"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sair", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(bt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_buscar)
                            .addComponent(bt_novo))
                        .addComponent(bt_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bt_buscar, bt_editar, bt_excluir, bt_novo, jButton2});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setText("Data:");

        bt_data_anterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-left-icon (1).png"))); // NOI18N
        bt_data_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_data_anteriorActionPerformed(evt);
            }
        });

        bt_data_proxima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/navigate-right-icon2.png"))); // NOI18N
        bt_data_proxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_data_proximaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_dataConsul, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_data_anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_data_proxima, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bt_data_proxima, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bt_data_anterior, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_dataConsul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Fila:");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        bt_buscar1.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        bt_buscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Search-icon (1).png"))); // NOI18N
        bt_buscar1.setToolTipText("");
        bt_buscar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscar1ActionPerformed(evt);
            }
        });

        bt_novo1.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        bt_novo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/new-file-icon (2).png"))); // NOI18N
        bt_novo1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_novo1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bt_novo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_novo1ActionPerformed(evt);
            }
        });

        bt_excluir1.setFont(new java.awt.Font("Ubuntu", 0, 8)); // NOI18N
        bt_excluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/trash-icon (2).png"))); // NOI18N
        bt_excluir1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Excluir", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_excluir1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bt_excluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluir1ActionPerformed(evt);
            }
        });

        bt_editar1.setFont(new java.awt.Font("Ubuntu", 0, 8)); // NOI18N
        bt_editar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Action-edit-icon (2).png"))); // NOI18N
        bt_editar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        bt_editar1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bt_editar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editar1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/Log-Out-icon (1).png"))); // NOI18N
        jButton3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sair", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Ubuntu", 0, 11))); // NOI18N
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(bt_buscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_novo1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_excluir1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_editar1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_novo1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(bt_excluir1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(bt_editar1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_buscar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/markConsult/imagens/update-icon.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jLabel1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarActionPerformed
 
        editaConsulta();

    }//GEN-LAST:event_bt_editarActionPerformed

    private void bt_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_novoActionPerformed
try {                                        
            CadConsultaModal telCadCons = new CadConsultaModal(null, true);
            telCadCons.estadoBotoes("novo");
            telCadCons.novoCad(pegadataAtual());
            telCadCons.setVisible(true);
            buscaPorData(pegadataAtual(),2);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_bt_novoActionPerformed

    private void bt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluirActionPerformed
        delCosulta();
    }//GEN-LAST:event_bt_excluirActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
       
        ConsPorPaciente tela_busca = new ConsPorPaciente(null, true);
        tela_busca.setVisible(true);
        try {
               buscaPorData(pegadataAtual(),3);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
     

    }//GEN-LAST:event_bt_buscarActionPerformed

    private void bt_movPcimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_movPcimaActionPerformed
        //bt_altSeqConsul.setEnabled(true);

        
            int c = jTable2.getSelectedRow();
            if (c < 0) {
                JOptionPane.showMessageDialog(null, "Escolha uma consulta!");
            } else if (c == 0) {
            } else {
                Consulta con = model2.getItem(c);
                model2.excluir(con);
                model2.movePcima(con, c - 1);
                model2.setValores();
                jTable2.getSelectionModel().setSelectionInterval(c - 1, c - 1);
                bt_altSeqConsul.setEnabled(true);
            }
    }//GEN-LAST:event_bt_movPcimaActionPerformed

    private void bt_movPbaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_movPbaixoActionPerformed

    
          
            int c = jTable2.getSelectedRow();
            int t = jTable2.getRowCount();
            if (c < 0) {
                JOptionPane.showMessageDialog(null, "Escolha uma consulta!");
            } else if (c < t - 1) {
                Consulta con = model2.getItem(c);
                model2.excluir(con);
                model2.movePcima(con, c + 1);
                model2.setValores();
                jTable2.getSelectionModel().setSelectionInterval(c + 1, c + 1);
                bt_altSeqConsul.setEnabled(true);

            }

    }//GEN-LAST:event_bt_movPbaixoActionPerformed

    private void bt_altSeqConsulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_altSeqConsulActionPerformed
        salvaSeq();
        bt_altSeqConsul.setEnabled(false);

    }//GEN-LAST:event_bt_altSeqConsulActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
       if (jTable1.isEnabled()) {

            if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 1) {
                selecionado = jTable1.getSelectedRow();
            } else if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
                editaConsulta();
                selecionado = jTable1.getSelectedRow();
 
           }
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void jMenuIt_AbertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_AbertaActionPerformed
       popupselsecionado(1);
    }//GEN-LAST:event_jMenuIt_AbertaActionPerformed

    private void jMenuIt_EncerraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_EncerraActionPerformed
         popupselsecionado(2);
    }//GEN-LAST:event_jMenuIt_EncerraActionPerformed

    private void jMenuIt_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_CancelActionPerformed
        popupselsecionado(3);
    }//GEN-LAST:event_jMenuIt_CancelActionPerformed

    private void jMenuIt_FaltouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_FaltouActionPerformed
        popupselsecionado(4);
    }//GEN-LAST:event_jMenuIt_FaltouActionPerformed

    private void jMenuIt_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_ExcluirActionPerformed
      jPMenu.setVisible(false);
            delCosulta();
    }//GEN-LAST:event_jMenuIt_ExcluirActionPerformed

    private void jMenuIt_historicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_historicoActionPerformed
       buscConsulta();
    }//GEN-LAST:event_jMenuIt_historicoActionPerformed

    private void bt_data_proximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_data_proximaActionPerformed
        try {

            Date atu = pegaProximaData();
            tf_dataConsul.setDate(atu);

        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_data_proximaActionPerformed

    private void bt_data_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_data_anteriorActionPerformed

        try {
            Date atu = pegaDataAnterior();
            tf_dataConsul.setDate(atu);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_data_anteriorActionPerformed

    private void jMenuIt_retornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_retornoActionPerformed
        Consulta con = model.getItem(jTable1.getSelectedRow());
        CadRetorno retorno = new CadRetorno(null, true);
        retorno.passaConsulta(con);
        retorno.setNomeClie(con.getPaciente().getNome());
        retorno.setVisible(true);
    }//GEN-LAST:event_jMenuIt_retornoActionPerformed

    private void jMenuIt_ProcedimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_ProcedimentoActionPerformed
        Consulta con = model.getItem(jTable1.getSelectedRow());
        MarcProcedimento pro = new MarcProcedimento(null, true);
        pro.passaConsulta(con);
        pro.setNomeClie(con.getPaciente().getNome());
        pro.setVisible(true);
    }//GEN-LAST:event_jMenuIt_ProcedimentoActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
       if (jTable2.isEnabled()) {

            if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 1) {
                selecionado2 = jTable2.getSelectedRow();
            } else if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
                editaConsulta2();
                selecionado2 = jTable2.getSelectedRow();
 
           }
        }
    }//GEN-LAST:event_jTable2MousePressed

    private void jMenuIt_addFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_addFilaActionPerformed
            int sele = jTable1.getSelectedRow();
            Consulta con = model.getItem(sele);
            con.setFila(true);
            con.setStatus(5);
            model2.inserir(con);
            model2.setValores();
            salvaSeq();
            
        try {
            buscaPorData(pegadataAtual(),1);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_jMenuIt_addFilaActionPerformed

    private void jMenuIt_Encerra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_Encerra1ActionPerformed
   popupselsecionado2(2);
    }//GEN-LAST:event_jMenuIt_Encerra1ActionPerformed

    private void jMenuIt_Cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_Cancel1ActionPerformed
    popupselsecionado2(3);
    }//GEN-LAST:event_jMenuIt_Cancel1ActionPerformed

    private void jMenuIt_historico1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_historico1ActionPerformed
        buscConsulta2();
    }//GEN-LAST:event_jMenuIt_historico1ActionPerformed

    private void jMenuIt_retorno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_retorno1ActionPerformed
        Consulta con = model2.getItem(jTable2.getSelectedRow());
        CadRetorno retorno = new CadRetorno(null, true);
        retorno.passaConsulta(con);
        retorno.setNomeClie(con.getPaciente().getNome());
        retorno.setVisible(true);
    }//GEN-LAST:event_jMenuIt_retorno1ActionPerformed

    private void jMenuIt_Procedimento1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_Procedimento1ActionPerformed
        Consulta con = model2.getItem(jTable2.getSelectedRow());
        MarcProcedimento pro = new MarcProcedimento(null, true);
        pro.passaConsulta(con);
        pro.setNomeClie(con.getPaciente().getNome());
        pro.setVisible(true);
    }//GEN-LAST:event_jMenuIt_Procedimento1ActionPerformed

    private void jMenuIt_Excluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_Excluir1ActionPerformed
        jPMenu2.setVisible(false);
            delCosulta2();
    }//GEN-LAST:event_jMenuIt_Excluir1ActionPerformed

    private void jMenuIt_RmFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_RmFilaActionPerformed

        int sele = jTable2.getSelectedRow();
            Consulta con = model2.getItem(sele);
            con.setFila(false);
            con.setStatus(1);
            ICadConsultasDAO dao = new CadConsultasDAO();
            dao.altConsult(con);
        try {
            buscaPorData(pegadataAtual(),1);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuIt_RmFilaActionPerformed

    private void bt_buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_buscar1ActionPerformed

    private void bt_novo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_novo1ActionPerformed
    try {                                        
            CadConsultaModal telCadCons = new CadConsultaModal(null, true);
            telCadCons.estadoBotoes("novo");
            telCadCons.novoCad(pegadataAtual());
            telCadCons.setVisible(true);
            buscaPorData(pegadataAtual(),2);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_novo1ActionPerformed

    private void bt_excluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluir1ActionPerformed
    delCosulta2();
    }//GEN-LAST:event_bt_excluir1ActionPerformed

    private void bt_editar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editar1ActionPerformed
    editaConsulta2();

    }//GEN-LAST:event_bt_editar1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuIt_EmConsulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_EmConsulActionPerformed
        popupselsecionado2(6);
    }//GEN-LAST:event_jMenuIt_EmConsulActionPerformed

    private void jMenuIt_AguardandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIt_AguardandoActionPerformed
       popupselsecionado2(5);
    }//GEN-LAST:event_jMenuIt_AguardandoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            buscaPorData(pegadataAtual(),1);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_altSeqConsul;
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_buscar1;
    private javax.swing.JButton bt_data_anterior;
    private javax.swing.JButton bt_data_proxima;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_editar1;
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_excluir1;
    private javax.swing.JButton bt_movPbaixo;
    private javax.swing.JButton bt_movPcima;
    private javax.swing.JButton bt_novo;
    private javax.swing.JButton bt_novo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jM_altStatus;
    private javax.swing.JMenu jM_altStatus1;
    private javax.swing.JMenuItem jMenuIt_Aberta;
    private javax.swing.JMenuItem jMenuIt_Aguardando;
    private javax.swing.JMenuItem jMenuIt_Cancel;
    private javax.swing.JMenuItem jMenuIt_Cancel1;
    private javax.swing.JMenuItem jMenuIt_EmConsul;
    private javax.swing.JMenuItem jMenuIt_Encerra;
    private javax.swing.JMenuItem jMenuIt_Encerra1;
    private javax.swing.JMenuItem jMenuIt_Excluir;
    private javax.swing.JMenuItem jMenuIt_Excluir1;
    private javax.swing.JMenuItem jMenuIt_Faltou;
    private javax.swing.JMenuItem jMenuIt_Procedimento;
    private javax.swing.JMenuItem jMenuIt_Procedimento1;
    private javax.swing.JMenuItem jMenuIt_RmFila;
    private javax.swing.JMenuItem jMenuIt_addFila;
    private javax.swing.JMenuItem jMenuIt_historico;
    private javax.swing.JMenuItem jMenuIt_historico1;
    private javax.swing.JMenuItem jMenuIt_retorno;
    private javax.swing.JMenuItem jMenuIt_retorno1;
    private javax.swing.JPopupMenu jPMenu;
    private javax.swing.JPopupMenu jPMenu2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private com.toedter.calendar.JDateChooser tf_dataConsul;
    // End of variables declaration//GEN-END:variables
 public final java.util.Date converte(String dataConsul) throws ParseException {
        DateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
        java.sql.Date dat = new java.sql.Date(forma.parse(dataConsul).getTime());

        return dat;
    }

   
 
//Altera o status no banco
    public void popupselsecionado(int status) {
        ICadConsultasDAO dao = new CadConsultasDAO();
        List<Consulta> con = new ArrayList<>();
      
                int c = jTable1.getSelectedRow();
                if (c < 0) {
                } else {
                    con.clear();
                    con.add(model.getItem(c));
                    con.get(0).setStatus(status);
                    model.alterar(c, con.get(0));
                    jTable1.getSelectionModel().setSelectionInterval(c, c);
                }
        dao.altStatConsult(con);
    }

      
      //Altera o status no banco
    public void popupselsecionado2(int status) {
        ICadConsultasDAO dao = new CadConsultasDAO();
        List<Consulta> con = new ArrayList<>();
      
                int c = jTable2.getSelectedRow();
                if (c < 0) {
                } else {
                    con.clear();
                    con.add(model2.getItem(c));
                    con.get(0).setStatus(status);
                    model2.alterar(c, con.get(0));
                    jTable2.getSelectionModel().setSelectionInterval(c, c);
                }
        dao.altStatConsult(con);
    }
       
      
    
private Date pegadataAtual() throws ParseException{
     Date dataConve;
     java.util.Date data_consul = tf_dataConsul.getDate();
     String dataAtual = formato.format(data_consul);
     dataConve = (Date) converte(dataAtual);
    
    return dataConve;
    
}
    private List<Consulta> buscaPorData(Date data, int sele) {
        
        ArrayList<Consulta> consultas = new ArrayList();
        ArrayList<Consulta> consultasEmFila = new ArrayList();
        
            ICadConsultasDAO dao = new CadConsultasDAO();
            Date dataConve = data;
            for (Consulta consulta : dao.buscConsPdata(dataConve)) {
                if (consulta.isFila()) {
                     consultasEmFila.add(consulta);
                    
                }else{
                   consultas.add(consulta);
                }
        }
        
            model.listar(consultas);
            model2.listar(consultasEmFila);

        FormatacaoConteudo corNomes = new FormatacaoConteudo();
        jTable1.getColumnModel().getColumn(5).setCellRenderer(corNomes);
        jTable2.getColumnModel().getColumn(5).setCellRenderer(corNomes);
        switch (sele) {
            case 1:
                 SlecionaPrimeiro();
                 SlecionaPrimeiro2();
                break;
            case 2:
                 SelecionaUltimo();
                 SelecionaUltimo2();
                break;
           case 3:
                 Selecionado();
                 Selecionado2();
                break;
            default:
                throw new AssertionError();
        }
       
        return consultas;
    }
    
    public void SelecionaUltimo(){
       
        int ultCad = jTable1.getRowCount();
        jTable1.getSelectionModel().setSelectionInterval(ultCad - 1, ultCad - 1);
        selecionado = ultCad - 1;
        
    } 
    public void SelecionaUltimo2(){
       
        int ultCad = jTable2.getRowCount();
        jTable2.getSelectionModel().setSelectionInterval(ultCad - 1, ultCad - 1);
        selecionado2 = ultCad - 1;
        
    } 
    public void Selecionado(){
        
        Consulta c = model.getItem(selecionado);
        if(c == null){
             SlecionaPrimeiro();
         }else{
        jTable1.getSelectionModel().setSelectionInterval(selecionado, selecionado);
    
        }
    }
    public void Selecionado2(){
        
        Consulta c = model2.getItem(selecionado2);
        if(c == null){
             SlecionaPrimeiro();
         }else{
        jTable2.getSelectionModel().setSelectionInterval(selecionado2, selecionado2);
    
        }
    }
     public void SlecionaPrimeiro(){
         int i = jTable1.getRowCount();
         if (i > 0) {
         jTable1.getSelectionModel().setSelectionInterval(0, 0);
         selecionado = 0;
         }
        
    }
  
      public void SlecionaPrimeiro2(){
         int i = jTable2.getRowCount();
         if (i > 0) {
         jTable2.getSelectionModel().setSelectionInterval(0, 0);
         selecionado2 = 0;
         }
        
    }
    //altera sequencias e status das consultas
    public void salvaSeq() {
        ICadConsultasDAO dao = new CadConsultasDAO();
                List<Consulta> c = model2.lista();
                dao.altSeqConsult(c);
    }

    private void buscConsulta() {
        ConsPorPaciente tela_busca = new ConsPorPaciente(null, true);
        Consulta con = model.getItem(selecionado);
        tela_busca.retornaiItemSelecionado(con.getPaciente().getId(), con.getPaciente().getNome());
        tela_busca.setVisible(true);
        try {
                  buscaPorData(pegadataAtual(),3);
            
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void buscConsulta2() {
        ConsPorPaciente tela_busca = new ConsPorPaciente(null, true);
        Consulta con = model2.getItem(selecionado2);
        tela_busca.retornaiItemSelecionado(con.getPaciente().getId(), con.getPaciente().getNome());
        tela_busca.setVisible(true);
        try {
                  buscaPorData(pegadataAtual(),3);
            
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    

    public void delCosulta() {
        int i = jTable1.getRowCount();
        if (i == 0) {
        
        }else{   
        int opcao_escolhida = JOptionPane.showConfirmDialog(null, "Excluir consulta selecionada?", "Exclusão ", JOptionPane.YES_NO_OPTION, 3);
        if (opcao_escolhida == JOptionPane.YES_OPTION) {

            ICadConsultasDAO dao = new CadConsultasDAO();
            Consulta con;   
            int c = jTable1.getSelectedRow();
            con = model.getItem(c);
            dao.rmConsult(con.getId());
            model.excluir(con);
            SelecionaUltimo();      
        }
        }
    }
        
     public void delCosulta2() {
        int i = jTable2.getRowCount();
        if (i == 0) {
        
        }else{   
        int opcao_escolhida = JOptionPane.showConfirmDialog(null, "Excluir consulta selecionada?", "Exclusão ", JOptionPane.YES_NO_OPTION, 3);
        if (opcao_escolhida == JOptionPane.YES_OPTION) {

            ICadConsultasDAO dao = new CadConsultasDAO();
            Consulta con;   
            int c = jTable2.getSelectedRow();
            con = model2.getItem(c);
            dao.rmConsult(con.getId());
            model2.excluir(con);
            SelecionaUltimo2();      
        }
        }
    }

    
    public void editaConsulta(){
       if (jTable1.getRowCount()>0) { 
         int sele = jTable1.getSelectedRow();
         if (sele > -1) {
         Consulta l = model.getItem(sele);
         CadConsultaModal lig = new CadConsultaModal(null, true);
         lig.mostra_dados(l);
         lig.estadoBotoes("novo");
         lig.mudaIserirAlt(1);
         lig.setVisible(true);
         try {
            buscaPorData(pegadataAtual(),3);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
         }else {
                JOptionPane.showMessageDialog(null, "Selecione uma Consulta!");
            }
       }
    }
    
    public void editaConsulta2(){
       if (jTable2.getRowCount()>0) { 
         int sele = jTable2.getSelectedRow();
         if (sele > -1) {
         Consulta l = model2.getItem(sele);
         CadConsultaModal lig = new CadConsultaModal(null, true);
         lig.mostra_dados(l);
         lig.estadoBotoes("novo");
         lig.mudaIserirAlt(1);
         lig.setVisible(true);
         try {
            buscaPorData(pegadataAtual(),3);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
         }else {
                JOptionPane.showMessageDialog(null, "Selecione uma Consulta!");
            }
       }
    }
        private void addpopup(){
    jTable1.addMouseListener(new MouseAdapter() {

              @Override
              public void mouseClicked(MouseEvent e) {  
        //Verificando se o botão direito foi pressionado  
        if ((e.getModifiers() & MouseEvent.BUTTON3_MASK) != 0) {
            jPMenu.show(jTable1, e.getX(), e.getY()); 
        }
              }
    });
    
        
         jTable2.addMouseListener(new MouseAdapter() {

              @Override
              public void mouseClicked(MouseEvent e) {  
        //Verificando se o botão direito foi pressionado  
        if ((e.getModifiers() & MouseEvent.BUTTON3_MASK) != 0) {
            jPMenu2.show(jTable2, e.getX(), e.getY()); 
        }
              }
    });
        } 
     private Date pegaProximaData() throws ParseException{
     Date dataConve;
     Calendar calendar = new GregorianCalendar();
     calendar.setTime(pegadataAtual());  
     calendar.add(Calendar.DAY_OF_MONTH, +1);  
     dataConve = (Date) converte(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
    return dataConve;
    
}
private Date pegaDataAnterior() throws ParseException{
     Date dataConve;
     Calendar calendar = new GregorianCalendar();
     calendar.setTime(pegadataAtual());  
    calendar.add(Calendar.DAY_OF_MONTH, -1);  
     dataConve = (Date) converte(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
    return dataConve;
    
}
}
